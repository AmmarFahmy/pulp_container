{"swagger": "2.0", "info": {"title": "Pulp 3 API", "logo": {"url": "https://pulp.plan.io/attachments/download/517478/pulp_logo_word_rectangle.svg"}, "version": "v3"}, "host": "localhost:24817", "schemes": ["http"], "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/docker/tag/": {"post": {"operationId": "docker_tag_create", "description": "Trigger an asynchronous task to create a new repository", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["docker: tag"]}, "parameters": []}, "/docker/untag/": {"post": {"operationId": "docker_untag_create", "description": "Trigger an asynchronous task to create a new repository", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["docker: untag"]}, "parameters": []}, "/pulp/api/v3/content/docker/blobs/": {"get": {"operationId": "content_docker_blobs_list", "summary": "List blobs", "description": "ViewSet for Blobs.", "parameters": [{"name": "digest", "in": "query", "description": "Filter results where digest matches value", "required": false, "type": "string"}, {"name": "digest__in", "in": "query", "description": "Filter results where digest is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "media_type", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Blob"}}}}}}, "tags": ["content: blobs"]}, "post": {"operationId": "content_docker_blobs_create", "summary": "Create a blob", "description": "Create a new Blob from a request.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Blob"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Blob"}}}, "tags": ["content: blobs"]}, "parameters": []}, "{blob_href}": {"get": {"operationId": "content_docker_blobs_read", "summary": "Inspect a blob", "description": "ViewSet for Blobs.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Blob"}}}, "tags": ["content: blobs"]}, "parameters": [{"name": "blob_href", "in": "path", "description": "URI of Blob. e.g.: /pulp/api/v3/content/docker/blobs/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/docker/manifests/": {"get": {"operationId": "content_docker_manifests_list", "summary": "List manifests", "description": "ViewSet for Manifest.", "parameters": [{"name": "digest", "in": "query", "description": "Filter results where digest matches value", "required": false, "type": "string"}, {"name": "digest__in", "in": "query", "description": "Filter results where digest is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "media_type", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Manifest"}}}}}}, "tags": ["content: manifests"]}, "post": {"operationId": "content_docker_manifests_create", "summary": "Create a manifest", "description": "Create a new Manifest from a request.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Manifest"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Manifest"}}}, "tags": ["content: manifests"]}, "parameters": []}, "{manifest_href}": {"get": {"operationId": "content_docker_manifests_read", "summary": "Inspect a manifest", "description": "ViewSet for Manifest.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Manifest"}}}, "tags": ["content: manifests"]}, "parameters": [{"name": "manifest_href", "in": "path", "description": "URI of Manifest. e.g.: /pulp/api/v3/content/docker/manifests/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/docker/tags/": {"get": {"operationId": "content_docker_tags_list", "summary": "List tags", "description": "ViewSet for Tag.", "parameters": [{"name": "name", "in": "query", "description": "Filter results where name matches value", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "media_type", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "digest", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Tag"}}}}}}, "tags": ["content: tags"]}, "post": {"operationId": "content_docker_tags_create", "summary": "Create a tag", "description": "Create a new Tag from a request.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Tag"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Tag"}}}, "tags": ["content: tags"]}, "parameters": []}, "{tag_href}": {"get": {"operationId": "content_docker_tags_read", "summary": "Inspect a tag", "description": "ViewSet for Tag.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Tag"}}}, "tags": ["content: tags"]}, "parameters": [{"name": "tag_href", "in": "path", "description": "URI of Tag. e.g.: /pulp/api/v3/content/docker/tags/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/distributions/docker/docker/": {"get": {"operationId": "distributions_docker_docker_list", "summary": "List docker distributions", "description": "ViewSet for DockerDistribution model.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "base_path", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "base_path__contains", "in": "query", "description": "Filter results where base_path contains value", "required": false, "type": "string"}, {"name": "base_path__icontains", "in": "query", "description": "Filter results where base_path contains value", "required": false, "type": "string"}, {"name": "base_path__in", "in": "query", "description": "Filter results where base_path is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/DockerDistribution"}}}}}}, "tags": ["distributions: docker"]}, "post": {"operationId": "distributions_docker_docker_create", "summary": "Create a docker distribution", "description": "Trigger an asynchronous create task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DockerDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: docker"]}, "parameters": []}, "{docker_distribution_href}": {"get": {"operationId": "distributions_docker_docker_read", "summary": "Inspect a docker distribution", "description": "ViewSet for DockerDistribution model.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DockerDistribution"}}}, "tags": ["distributions: docker"]}, "put": {"operationId": "distributions_docker_docker_update", "summary": "Update a docker distribution", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DockerDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: docker"]}, "patch": {"operationId": "distributions_docker_docker_partial_update", "summary": "Partially update a docker distribution", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DockerDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: docker"]}, "delete": {"operationId": "distributions_docker_docker_delete", "summary": "Delete a docker distribution", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: docker"]}, "parameters": [{"name": "docker_distribution_href", "in": "path", "description": "URI of Docker Distribution. e.g.: /pulp/api/v3/distributions/docker/docker/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/remotes/docker/docker/": {"get": {"operationId": "remotes_docker_docker_list", "summary": "List docker remotes", "description": "A ViewSet for DockerRemote.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "_last_updated__lt", "in": "query", "description": "Filter results where _last_updated is less than value", "required": false, "type": "string"}, {"name": "_last_updated__lte", "in": "query", "description": "Filter results where _last_updated is less than or equal to value", "required": false, "type": "string"}, {"name": "_last_updated__gt", "in": "query", "description": "Filter results where _last_updated is greater than value", "required": false, "type": "string"}, {"name": "_last_updated__gte", "in": "query", "description": "Filter results where _last_updated is greater than or equal to value", "required": false, "type": "string"}, {"name": "_last_updated__range", "in": "query", "description": "Filter results where _last_updated is between two comma separated values", "required": false, "type": "string"}, {"name": "_last_updated", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/DockerRemote"}}}}}}, "tags": ["remotes: docker"]}, "post": {"operationId": "remotes_docker_docker_create", "summary": "Create a docker remote", "description": "A ViewSet for DockerRemote.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DockerRemote"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/DockerRemote"}}}, "tags": ["remotes: docker"]}, "parameters": []}, "{docker_remote_href}": {"get": {"operationId": "remotes_docker_docker_read", "summary": "Inspect a docker remote", "description": "A ViewSet for DockerRemote.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DockerRemote"}}}, "tags": ["remotes: docker"]}, "put": {"operationId": "remotes_docker_docker_update", "summary": "Update a docker remote", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DockerRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: docker"]}, "patch": {"operationId": "remotes_docker_docker_partial_update", "summary": "Partially update a docker remote", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DockerRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: docker"]}, "delete": {"operationId": "remotes_docker_docker_delete", "summary": "Delete a docker remote", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: docker"]}, "parameters": [{"name": "docker_remote_href", "in": "path", "description": "URI of Docker Remote. e.g.: /pulp/api/v3/remotes/docker/docker/1/", "required": true, "type": "string"}]}, "{docker_remote_href}sync/": {"post": {"operationId": "remotes_docker_docker_sync", "description": "Trigger an asynchronous task to sync content", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositorySyncURL"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: docker"]}, "parameters": [{"name": "docker_remote_href", "in": "path", "description": "URI of Docker Remote. e.g.: /pulp/api/v3/remotes/docker/docker/1/", "required": true, "type": "string"}]}}, "definitions": {"AsyncOperationResponse": {"required": ["task"], "type": "object", "properties": {"task": {"title": "Task", "description": "The href of the task.", "type": "string", "format": "uri"}}}, "Blob": {"required": ["_artifact", "_relative_path", "digest", "media_type"], "type": "object", "properties": {"_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "_type": {"title": " type", "type": "string", "readOnly": true, "minLength": 1}, "_artifact": {"title": " artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "_relative_path": {"title": " relative path", "description": "Path where the artifact is located relative to distributions base_path", "type": "string", "minLength": 1}, "digest": {"title": "Digest", "description": "sha256 of the Blob file", "type": "string", "minLength": 1}, "media_type": {"title": "Media type", "description": "Docker media type of the file", "type": "string", "minLength": 1}}}, "Manifest": {"required": ["_artifact", "_relative_path", "digest", "schema_version", "media_type", "listed_manifests", "config_blob", "blobs"], "type": "object", "properties": {"_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "_type": {"title": " type", "type": "string", "readOnly": true, "minLength": 1}, "_artifact": {"title": " artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "_relative_path": {"title": " relative path", "description": "Path where the artifact is located relative to distributions base_path", "type": "string", "minLength": 1}, "digest": {"title": "Digest", "description": "sha256 of the Manifest file", "type": "string", "minLength": 1}, "schema_version": {"title": "Schema version", "description": "Docker schema version", "type": "integer"}, "media_type": {"title": "Media type", "description": "Docker media type of the file", "type": "string", "minLength": 1}, "listed_manifests": {"description": "Manifests that are referenced by this Manifest List", "type": "array", "items": {"description": "Manifests that are referenced by this Manifest List", "type": "string", "format": "uri"}, "uniqueItems": true}, "config_blob": {"title": "Config blob", "description": "Blob that contains configuration for this Manifest", "type": "string", "format": "uri"}, "blobs": {"description": "Blobs that are referenced by this Manifest", "type": "array", "items": {"description": "Blobs that are referenced by this Manifest", "type": "string", "format": "uri"}, "uniqueItems": true}}}, "Tag": {"required": ["_artifact", "_relative_path", "name", "tagged_manifest"], "type": "object", "properties": {"_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "_type": {"title": " type", "type": "string", "readOnly": true, "minLength": 1}, "_artifact": {"title": " artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "_relative_path": {"title": " relative path", "description": "Path where the artifact is located relative to distributions base_path", "type": "string", "minLength": 1}, "name": {"title": "Name", "description": "Tag name", "type": "string", "minLength": 1}, "tagged_manifest": {"title": "Tagged manifest", "description": "Manifest that is tagged", "type": "string", "format": "uri"}}}, "DockerDistribution": {"required": ["base_path", "name"], "type": "object", "properties": {"base_path": {"title": "Base path", "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")", "type": "string", "maxLength": 255, "minLength": 1}, "content_guard": {"title": "Content guard", "description": "An optional content-guard.", "type": "string", "format": "uri", "x-nullable": true}, "name": {"title": "Name", "description": "A unique name. Ex, `rawhide` and `stable`.", "type": "string", "maxLength": 255, "minLength": 1}, "repository": {"title": "Repository", "description": "The latest RepositoryVersion for this Repository will be served.", "type": "string", "format": "uri", "x-nullable": true}, "_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "repository_version": {"title": "Repository version", "description": "RepositoryVersion to be served", "type": "string", "format": "uri", "x-nullable": true}, "_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "registry_path": {"title": "Registry path", "description": "The Registry hostame:port/name/ to use with docker pull command defined by this distribution.", "type": "string", "readOnly": true, "minLength": 1}}}, "DockerRemote": {"required": ["name", "url", "upstream_name"], "type": "object", "properties": {"_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "_type": {"title": " type", "type": "string", "readOnly": true, "minLength": 1}, "name": {"title": "Name", "description": "A unique name for this remote.", "type": "string", "minLength": 1}, "url": {"title": "Url", "description": "The URL of an external content source.", "type": "string", "minLength": 1}, "ssl_ca_certificate": {"title": "Ssl ca certificate", "description": "A string containing the PEM encoded CA certificate used to validate the server certificate presented by the remote server. All new line characters must be escaped. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "ssl_client_certificate": {"title": "Ssl client certificate", "description": "A string containing the PEM encoded client certificate used for authentication. All new line characters must be escaped. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "ssl_client_key": {"title": "Ssl client key", "description": "A PEM encoded private key used for authentication. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "ssl_validation": {"title": "Ssl validation", "description": "If True, SSL peer validation must be performed.", "type": "boolean"}, "proxy_url": {"title": "Proxy url", "description": "The proxy URL. Format: scheme://user:password@host:port", "type": "string", "minLength": 1, "x-nullable": true}, "username": {"title": "Username", "description": "The username to be used for authentication when syncing.", "type": "string", "minLength": 1, "x-nullable": true}, "password": {"title": "Password", "description": "The password to be used for authentication when syncing.", "type": "string", "minLength": 1, "x-nullable": true}, "_last_updated": {"title": " last updated", "description": "Timestamp of the most recent update of the remote.", "type": "string", "format": "date-time", "readOnly": true}, "download_concurrency": {"title": "Download concurrency", "description": "Total number of simultaneous connections.", "type": "integer", "minimum": 1}, "policy": {"title": "Policy", "description": "The policy to use when downloading content.", "type": "string", "enum": ["immediate", "on_demand", "streamed"], "default": "immediate"}, "upstream_name": {"title": "Upstream name", "description": "Name of the upstream repository", "type": "string", "minLength": 1}, "whitelist_tags": {"title": "Whitelist tags", "description": "A comma separated string of tags to sync.\n        Example:\n\n        latest,1.27.0\n        ", "type": "string", "minLength": 1, "x-nullable": true}}}, "RepositorySyncURL": {"required": ["repository"], "type": "object", "properties": {"repository": {"title": "Repository", "description": "A URI of the repository to be synchronized.", "type": "string", "format": "uri"}, "mirror": {"title": "Mirror", "description": "If ``True``, synchronization will remove all content that is not present in the remote repository. If ``False``, sync will be additive only.", "type": "boolean", "default": false}}}}, "tags": [{"name": "docker: tag", "x-displayName": "Docker: Tag"}, {"name": "docker: untag", "x-displayName": "Docker: Untag"}, {"name": "content: blobs", "x-displayName": "Content: Blobs"}, {"name": "content: manifests", "x-displayName": "Content: Manifests"}, {"name": "content: tags", "x-displayName": "Content: Tags"}, {"name": "distributions: docker", "x-displayName": "Distributions: Docker"}, {"name": "remotes: docker", "x-displayName": "Remotes: Docker"}]}