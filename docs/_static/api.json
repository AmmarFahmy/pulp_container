{"swagger": "2.0", "info": {"title": "Pulp 3 API", "version": "v3"}, "host": "localhost:24817", "schemes": ["http"], "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/pulp/api/v3/content/docker/blobs/": {"get": {"operationId": "content_docker_blobs_list", "summary": "List manifest blobs", "description": "ViewSet for ManifestBlobs.", "parameters": [{"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Blob"}}}}}}, "tags": ["content"]}, "post": {"operationId": "content_docker_blobs_create", "summary": "Create a manifest blob", "description": "Create a new ManifestBlob from a request.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Blob"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Blob"}}}, "tags": ["content"]}, "parameters": []}, "{manifest_blob_href}": {"get": {"operationId": "content_docker_blobs_read", "summary": "Inspect a manifest blob", "description": "ViewSet for ManifestBlobs.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Blob"}}}, "tags": ["content"]}, "parameters": [{"name": "manifest_blob_href", "in": "path", "description": "URI of Manifest Blob. e.g.: /pulp/api/v3/content/docker/blobs/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/docker/manifest-list-tags/": {"get": {"operationId": "content_docker_manifest-list-tags_list", "summary": "List manifest list tags", "description": "ViewSet for ManifestListTag.", "parameters": [{"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ManifestListTag"}}}}}}, "tags": ["content"]}, "post": {"operationId": "content_docker_manifest-list-tags_create", "summary": "Create a manifest list tag", "description": "Create a new ManifestListTag from a request.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ManifestListTag"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ManifestListTag"}}}, "tags": ["content"]}, "parameters": []}, "{manifest_list_tag_href}": {"get": {"operationId": "content_docker_manifest-list-tags_read", "summary": "Inspect a manifest list tag", "description": "ViewSet for ManifestListTag.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ManifestListTag"}}}, "tags": ["content"]}, "parameters": [{"name": "manifest_list_tag_href", "in": "path", "description": "URI of Manifest List Tag. e.g.: /pulp/api/v3/content/docker/manifest-list-tags/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/docker/manifest-lists/": {"get": {"operationId": "content_docker_manifest-lists_list", "summary": "List manifest lists", "description": "ViewSet for ManifestList.", "parameters": [{"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ManifestList"}}}}}}, "tags": ["content"]}, "post": {"operationId": "content_docker_manifest-lists_create", "summary": "Create a manifest list", "description": "Create a new ManifestList from a request.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ManifestList"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ManifestList"}}}, "tags": ["content"]}, "parameters": []}, "{manifest_list_href}": {"get": {"operationId": "content_docker_manifest-lists_read", "summary": "Inspect a manifest list", "description": "ViewSet for ManifestList.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ManifestList"}}}, "tags": ["content"]}, "parameters": [{"name": "manifest_list_href", "in": "path", "description": "URI of Manifest List. e.g.: /pulp/api/v3/content/docker/manifest-lists/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/docker/manifest-tags/": {"get": {"operationId": "content_docker_manifest-tags_list", "summary": "List manifest tags", "description": "ViewSet for ManifestTag.", "parameters": [{"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ManifestTag"}}}}}}, "tags": ["content"]}, "post": {"operationId": "content_docker_manifest-tags_create", "summary": "Create a manifest tag", "description": "Create a new ManifestTag from a request.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ManifestTag"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ManifestTag"}}}, "tags": ["content"]}, "parameters": []}, "{manifest_tag_href}": {"get": {"operationId": "content_docker_manifest-tags_read", "summary": "Inspect a manifest tag", "description": "ViewSet for ManifestTag.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ManifestTag"}}}, "tags": ["content"]}, "parameters": [{"name": "manifest_tag_href", "in": "path", "description": "URI of Manifest Tag. e.g.: /pulp/api/v3/content/docker/manifest-tags/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/docker/manifests/": {"get": {"operationId": "content_docker_manifests_list", "summary": "List image manifests", "description": "ViewSet for Manifest.", "parameters": [{"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Manifest"}}}}}}, "tags": ["content"]}, "post": {"operationId": "content_docker_manifests_create", "summary": "Create an image manifest", "description": "Create a new Manifest from a request.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Manifest"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Manifest"}}}, "tags": ["content"]}, "parameters": []}, "{image_manifest_href}": {"get": {"operationId": "content_docker_manifests_read", "summary": "Inspect an image manifest", "description": "ViewSet for Manifest.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Manifest"}}}, "tags": ["content"]}, "parameters": [{"name": "image_manifest_href", "in": "path", "description": "URI of Image Manifest. e.g.: /pulp/api/v3/content/docker/manifests/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/docker-distributions/": {"get": {"operationId": "docker-distributions_list", "summary": "List docker distributions", "description": "ViewSet for DockerDistribution model.", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/DockerDistribution"}}}}}}, "tags": ["docker-distributions"]}, "post": {"operationId": "docker-distributions_create", "summary": "Create a docker distribution", "description": "Trigger an asynchronous create task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DockerDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["docker-distributions"]}, "parameters": []}, "{docker_distribution_href}": {"get": {"operationId": "docker-distributions_read", "summary": "Inspect a docker distribution", "description": "ViewSet for DockerDistribution model.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DockerDistribution"}}}, "tags": ["docker-distributions"]}, "put": {"operationId": "docker-distributions_update", "summary": "Update a docker distribution", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DockerDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["docker-distributions"]}, "patch": {"operationId": "docker-distributions_partial_update", "summary": "Partially update a docker distribution", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DockerDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["docker-distributions"]}, "delete": {"operationId": "docker-distributions_delete", "summary": "Delete a docker distribution", "description": "ViewSet for DockerDistribution model.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["docker-distributions"]}, "parameters": [{"name": "docker_distribution_href", "in": "path", "description": "URI of Docker Distribution. e.g.: /pulp/api/v3/docker-distributions/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/remotes/docker/docker/": {"get": {"operationId": "remotes_docker_docker_list", "summary": "List docker remotes", "description": "A ViewSet for DockerRemote.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "_last_updated__lt", "in": "query", "description": "Filter results where _last_updated is less than value", "required": false, "type": "string"}, {"name": "_last_updated__lte", "in": "query", "description": "Filter results where _last_updated is less than or equal to value", "required": false, "type": "string"}, {"name": "_last_updated__gt", "in": "query", "description": "Filter results where _last_updated is greater than value", "required": false, "type": "string"}, {"name": "_last_updated__gte", "in": "query", "description": "Filter results where _last_updated is greater than or equal to value", "required": false, "type": "string"}, {"name": "_last_updated__range", "in": "query", "description": "Filter results where _last_updated is between two comma separated values", "required": false, "type": "string"}, {"name": "_last_updated", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/DockerRemote"}}}}}}, "tags": ["remotes"]}, "post": {"operationId": "remotes_docker_docker_create", "summary": "Create a docker remote", "description": "A ViewSet for DockerRemote.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DockerRemote"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/DockerRemote"}}}, "tags": ["remotes"]}, "parameters": []}, "{docker_remote_href}": {"get": {"operationId": "remotes_docker_docker_read", "summary": "Inspect a docker remote", "description": "A ViewSet for DockerRemote.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DockerRemote"}}}, "tags": ["remotes"]}, "put": {"operationId": "remotes_docker_docker_update", "summary": "Update a docker remote", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DockerRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes"]}, "patch": {"operationId": "remotes_docker_docker_partial_update", "summary": "Partially update a docker remote", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DockerRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes"]}, "delete": {"operationId": "remotes_docker_docker_delete", "summary": "Delete a docker remote", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes"]}, "parameters": [{"name": "docker_remote_href", "in": "path", "description": "URI of Docker Remote. e.g.: /pulp/api/v3/remotes/docker/docker/1/", "required": true, "type": "string"}]}, "{docker_remote_href}sync/": {"post": {"operationId": "remotes_docker_docker_sync", "description": "Trigger an asynchronous task to sync content", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositorySyncURL"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes"]}, "parameters": [{"name": "docker_remote_href", "in": "path", "description": "URI of Docker Remote. e.g.: /pulp/api/v3/remotes/docker/docker/1/", "required": true, "type": "string"}]}}, "definitions": {"Blob": {"required": ["_artifact", "_relative_path", "digest", "media_type"], "type": "object", "properties": {"_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "_type": {"title": " type", "type": "string", "readOnly": true, "minLength": 1}, "_artifact": {"title": " artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "_relative_path": {"title": " relative path", "description": "Path where the artifact is located relative to distributions base_path", "type": "string", "minLength": 1}, "digest": {"title": "Digest", "description": "sha256 of the Blob file", "type": "string", "minLength": 1}, "media_type": {"title": "Media type", "description": "Docker media type of the file", "type": "string", "minLength": 1}}}, "ManifestListTag": {"required": ["_artifact", "_relative_path", "name", "manifest_list"], "type": "object", "properties": {"_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "_type": {"title": " type", "type": "string", "readOnly": true, "minLength": 1}, "_artifact": {"title": " artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "_relative_path": {"title": " relative path", "description": "Path where the artifact is located relative to distributions base_path", "type": "string", "minLength": 1}, "name": {"title": "Name", "description": "Tag name", "type": "string", "minLength": 1}, "manifest_list": {"title": "Manifest list", "description": "Manifest List that is tagged", "type": "string", "format": "uri"}}}, "ManifestList": {"required": ["_artifact", "_relative_path", "digest", "schema_version", "media_type", "manifests"], "type": "object", "properties": {"_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "_type": {"title": " type", "type": "string", "readOnly": true, "minLength": 1}, "_artifact": {"title": " artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "_relative_path": {"title": " relative path", "description": "Path where the artifact is located relative to distributions base_path", "type": "string", "minLength": 1}, "digest": {"title": "Digest", "description": "sha256 of the ManifestList file", "type": "string", "minLength": 1}, "schema_version": {"title": "Schema version", "description": "Docker schema version", "type": "integer"}, "media_type": {"title": "Media type", "description": "Docker media type of the file", "type": "string", "minLength": 1}, "manifests": {"description": "Manifests that are referenced by this Manifest List", "type": "array", "items": {"description": "Manifests that are referenced by this Manifest List", "type": "string", "format": "uri"}, "uniqueItems": true}}}, "ManifestTag": {"required": ["_artifact", "_relative_path", "name", "manifest"], "type": "object", "properties": {"_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "_type": {"title": " type", "type": "string", "readOnly": true, "minLength": 1}, "_artifact": {"title": " artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "_relative_path": {"title": " relative path", "description": "Path where the artifact is located relative to distributions base_path", "type": "string", "minLength": 1}, "name": {"title": "Name", "description": "Tag name", "type": "string", "minLength": 1}, "manifest": {"title": "Manifest", "description": "Manifest that is tagged", "type": "string", "format": "uri"}}}, "Manifest": {"required": ["_artifact", "_relative_path", "digest", "schema_version", "media_type", "blobs", "config_blob"], "type": "object", "properties": {"_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "_type": {"title": " type", "type": "string", "readOnly": true, "minLength": 1}, "_artifact": {"title": " artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "_relative_path": {"title": " relative path", "description": "Path where the artifact is located relative to distributions base_path", "type": "string", "minLength": 1}, "digest": {"title": "Digest", "description": "sha256 of the Manifest file", "type": "string", "minLength": 1}, "schema_version": {"title": "Schema version", "description": "Docker schema version", "type": "integer"}, "media_type": {"title": "Media type", "description": "Docker media type of the file", "type": "string", "minLength": 1}, "blobs": {"description": "Blobs that are referenced by this Manifest", "type": "array", "items": {"description": "Blobs that are referenced by this Manifest", "type": "string", "format": "uri"}, "uniqueItems": true}, "config_blob": {"title": "Config blob", "description": "Blob that contains configuration for this Manifest", "type": "string", "format": "uri"}}}, "DockerDistribution": {"required": ["name", "base_path"], "type": "object", "properties": {"_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "name": {"title": "Name", "description": "A unique distribution name. Ex, `rawhide` and `stable`.", "type": "string", "maxLength": 255, "minLength": 1}, "publisher": {"title": "Publisher", "description": "Publications created by this publisher and repository are automaticallyserved as defined by this distribution", "type": "string", "format": "uri", "x-nullable": true}, "publication": {"title": "Publication", "description": "The publication being served as defined by this distribution", "type": "string", "format": "uri", "x-nullable": true}, "repository": {"title": "Repository", "description": "Publications created by this repository and publisher are automaticallyserved as defined by this distribution", "type": "string", "format": "uri", "x-nullable": true}, "content_guard": {"title": "Content guard", "description": "An optional content-guard.", "type": "string", "format": "uri", "x-nullable": true}, "remote": {"title": "Remote", "description": "Remote that can be used to fetch content when using pull-through caching.", "type": "string", "format": "uri", "x-nullable": true}, "base_path": {"title": "Base path", "description": "The base (relative) path that identifies the registry path.", "type": "string", "maxLength": 255, "minLength": 1}, "registry_path": {"title": "Registry path", "description": "The Registry hostame:port/name/ to use with docker pull command defined by this distribution.", "type": "string", "readOnly": true, "minLength": 1}, "repository_version": {"title": "Repository Version", "description": "A URI of the repository version to be served by the Docker Distribution.", "type": "string", "format": "uri"}}}, "AsyncOperationResponse": {"required": ["task"], "type": "object", "properties": {"task": {"title": "Task", "description": "The href of the task.", "type": "string", "format": "uri"}}}, "DockerRemote": {"required": ["name", "url", "upstream_name"], "type": "object", "properties": {"_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "_type": {"title": " type", "type": "string", "readOnly": true, "minLength": 1}, "name": {"title": "Name", "description": "A unique name for this remote.", "type": "string", "minLength": 1}, "url": {"title": "Url", "description": "The URL of an external content source.", "type": "string", "minLength": 1}, "validate": {"title": "Validate", "description": "If True, the plugin will validate imported artifacts.", "type": "boolean"}, "ssl_ca_certificate": {"title": "Ssl ca certificate", "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server.", "type": "string", "readOnly": true}, "ssl_client_certificate": {"title": "Ssl client certificate", "description": "A PEM encoded client certificate used for authentication.", "type": "string", "readOnly": true}, "ssl_client_key": {"title": "Ssl client key", "description": "A PEM encoded private key used for authentication.", "type": "string", "readOnly": true}, "ssl_validation": {"title": "Ssl validation", "description": "If True, SSL peer validation must be performed.", "type": "boolean"}, "proxy_url": {"title": "Proxy url", "description": "The proxy URL. Format: scheme://user:password@host:port", "type": "string"}, "username": {"title": "Username", "description": "The username to be used for authentication when syncing.", "type": "string"}, "password": {"title": "Password", "description": "The password to be used for authentication when syncing.", "type": "string"}, "_last_updated": {"title": " last updated", "description": "Timestamp of the most recent update of the remote.", "type": "string", "format": "date-time", "readOnly": true}, "download_concurrency": {"title": "Download concurrency", "description": "Total number of simultaneous connections.", "type": "integer", "minimum": 1}, "policy": {"title": "Policy", "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'cache_only'. 'immediate' is the default.", "type": "string", "enum": ["immediate", "on_demand", "streamed"], "default": "immediate"}, "upstream_name": {"title": "Upstream name", "description": "Name of the upstream repository", "type": "string", "minLength": 1}}}, "RepositorySyncURL": {"required": ["repository"], "type": "object", "properties": {"repository": {"title": "Repository", "description": "A URI of the repository to be synchronized.", "type": "string", "format": "uri"}, "mirror": {"title": "Mirror", "description": "The synchronization mode, True for \"mirror\" and False for \"additive\" mode.", "type": "boolean", "default": false}}}}, "tags": [{"name": "content", "x-displayName": "Content"}, {"name": "docker-distributions", "x-displayName": "Docker-Distributions"}, {"name": "remotes", "x-displayName": "Remotes"}]}